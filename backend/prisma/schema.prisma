// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Template {
  id               Int                @id @default(autoincrement())
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  name             String 
  templateType     TemplateType       @relation(fields: [templateTypeId], references: [id])
  templateTypeId   Int
  Project          Project?
  TemplateCategory TemplateCategory[]
}

model Project {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  name        String
  description String
  domain      Domain       @relation(fields: [domainId], references: [id])
  domainId    Int @unique
  user        User         @relation(fields: [userId], references: [id])
  userId      Int 
  template    Template     @relation(fields: [templateId], references: [id])
  templateId  Int @unique
  Deployment  Deployment[]
}

model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String
  email     String    @unique
  password  String
  Project   Project[]
  Domain    Domain[]
}

model Category {
  id               Int                @id @default(autoincrement())
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  name             String
  TemplateCategory TemplateCategory[]
}

model Domain {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String    @unique
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  Project   Project?
}

model Deployment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  status    String
  project   Project  @relation(fields: [projectId], references: [id])
  projectId Int
}

model TemplateType {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  name      String
  template  Template[]
}

model TemplateCategory {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  template   Template @relation(fields: [templateId], references: [id])
  templateId Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
}
